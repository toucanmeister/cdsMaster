
/**
 * @file eval.h
 *
 * Functions needed for compilation
 * 
 * THIS FILE HAS BEEN GENERATED USING 
 * $Id: free_node.h.xsl 14593 2006-01-31 17:09:55Z cg $.
 * DO NOT EDIT THIS FILE AS MIGHT BE CHANGED IN A LATER VERSION.
 *
 * ALL CHANGES MADE TO THIS FILE WILL BE OVERWRITTEN!
 *
 */

#ifndef _SAC_EVAL_H_
#define _SAC_EVAL_H_

#include "types.h"

extern node *EVALassign (node * arg_node, info * arg_info);
extern node *EVALbinop (node * arg_node, info * arg_info);
extern node *EVALblock (node * arg_node, info * arg_info);
extern node *EVALboolconst (node * arg_node, info * arg_info);
extern node *EVALcast (node * arg_node, info * arg_info);
extern node *EVALdecblock (node * arg_node, info * arg_info);
extern node *EVALdowhile (node * arg_node, info * arg_info);
extern node *EVALfloatconst (node * arg_node, info * arg_info);
extern node *EVALfor (node * arg_node, info * arg_info);
extern node *EVALfunargs (node * arg_node, info * arg_info);
extern node *EVALfunbody (node * arg_node, info * arg_info);
extern node *EVALfuncall (node * arg_node, info * arg_info);
extern node *EVALfundec (node * arg_node, info * arg_info);
extern node *EVALfunparam (node * arg_node, info * arg_info);
extern node *EVALfunparams (node * arg_node, info * arg_info);
extern node *EVALif (node * arg_node, info * arg_info);
extern node *EVALintconst (node * arg_node, info * arg_info);
extern node *EVALmodule (node * arg_node, info * arg_info);
extern node *EVALmonop (node * arg_node, info * arg_info);
extern node *EVALproccall (node * arg_node, info * arg_info);
extern node *EVALreturn (node * arg_node, info * arg_info);
extern node *EVALvardec (node * arg_node, info * arg_info);
extern node *EVALvariable (node * arg_node, info * arg_info);
extern node *EVALwhile (node * arg_node, info * arg_info);

#endif /* _SAC_EVAL_H_ */
