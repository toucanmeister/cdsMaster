
/**
 * @file attribs.h
 *
 * Defines the AttribUnion and attrib structures.
 * 
 * THIS FILE HAS BEEN GENERATED USING 
 * $Id: attribs.h.xsl 14593 2006-01-31 17:09:55Z cg $.
 * DO NOT EDIT THIS FILE AS MIGHT BE CHANGED IN A LATER VERSION.
 *
 * ALL CHANGES MADE TO THIS FILE WILL BE OVERWRITTEN!
 *
 */

#ifndef _SAC_ATTRIBS_H_
#define _SAC_ATTRIBS_H_

#include "types.h"


/******************************************************************************
 * For each node a structure of its attributes is defined, named 
 * ATTRIBS_<nodename>
 *****************************************************************************/
struct ATTRIBS_N_ASSIGN
{
  char *Name;
};
struct ATTRIBS_N_BINOP
{
  binop Operator;
};
struct ATTRIBS_N_BLOCK
{
};
struct ATTRIBS_N_BOOLCONST
{
  bool Value;
};
struct ATTRIBS_N_CAST
{
  cvctype Type;
};
struct ATTRIBS_N_DECBLOCK
{
};
struct ATTRIBS_N_DOWHILE
{
};
struct ATTRIBS_N_FLOATCONST
{
  float Value;
};
struct ATTRIBS_N_FOR
{
};
struct ATTRIBS_N_FUNARGS
{
};
struct ATTRIBS_N_FUNBODY
{
};
struct ATTRIBS_N_FUNCALL
{
  char *Name;
};
struct ATTRIBS_N_FUNDEC
{
  char *Name;
};
struct ATTRIBS_N_FUNPARAM
{
  char *Name;
  cvctype Type;
};
struct ATTRIBS_N_FUNPARAMS
{
};
struct ATTRIBS_N_IF
{
};
struct ATTRIBS_N_INTCONST
{
  int Value;
};
struct ATTRIBS_N_MODULE
{
  char *name;
};
struct ATTRIBS_N_MONOP
{
  monop Operator;
};
struct ATTRIBS_N_PROCCALL
{
  char *Name;
};
struct ATTRIBS_N_RETURN
{
};
struct ATTRIBS_N_VARDEC
{
  char *Name;
};
struct ATTRIBS_N_VARIABLE
{
  char *Name;
};
struct ATTRIBS_N_WHILE
{
};
/*****************************************************************************
 * This union handles all different types of attributes. Its members are
 * called N_nodename.
 ****************************************************************************/
struct ATTRIBUNION
{
  struct ATTRIBS_N_ASSIGN *N_assign;
  struct ATTRIBS_N_BINOP *N_binop;
  struct ATTRIBS_N_BLOCK *N_block;
  struct ATTRIBS_N_BOOLCONST *N_boolconst;
  struct ATTRIBS_N_CAST *N_cast;
  struct ATTRIBS_N_DECBLOCK *N_decblock;
  struct ATTRIBS_N_DOWHILE *N_dowhile;
  struct ATTRIBS_N_FLOATCONST *N_floatconst;
  struct ATTRIBS_N_FOR *N_for;
  struct ATTRIBS_N_FUNARGS *N_funargs;
  struct ATTRIBS_N_FUNBODY *N_funbody;
  struct ATTRIBS_N_FUNCALL *N_funcall;
  struct ATTRIBS_N_FUNDEC *N_fundec;
  struct ATTRIBS_N_FUNPARAM *N_funparam;
  struct ATTRIBS_N_FUNPARAMS *N_funparams;
  struct ATTRIBS_N_IF *N_if;
  struct ATTRIBS_N_INTCONST *N_intconst;
  struct ATTRIBS_N_MODULE *N_module;
  struct ATTRIBS_N_MONOP *N_monop;
  struct ATTRIBS_N_PROCCALL *N_proccall;
  struct ATTRIBS_N_RETURN *N_return;
  struct ATTRIBS_N_VARDEC *N_vardec;
  struct ATTRIBS_N_VARIABLE *N_variable;
  struct ATTRIBS_N_WHILE *N_while;
};
#endif /* _SAC_ATTRIBS_H_ */
